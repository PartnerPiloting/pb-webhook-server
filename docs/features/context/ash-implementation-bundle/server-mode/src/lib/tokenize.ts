export function normalizeTerms(input: string): string[] { const toSlug = (s: string) => String(s || "").toLowerCase().normalize("NFKD").replace(/[\u0300-\u036f]/g,"").replace(/[^a-z0-9* ]+/g," ").replace(/\s+/g," ").trim(); const cleaned = toSlug(input); return cleaned.split(/[,;\n\r\t ]+/).map(t => t.trim()).filter(Boolean); }
export type FilterState = { includeAll: string[]; includeAny: string[]; exclude: string[] }; export function buildFilterFromString(q: string): FilterState { const tokens = normalizeTerms(q); const includeAll: string[] = []; const includeAny: string[] = []; const exclude: string[] = []; for (const raw of tokens) { if (raw.startsWith("-") && raw.length > 1) exclude.push(raw.slice(1)); else if (raw.includes("|")) raw.split("|").forEach(t => { const v = t.trim(); if (v) includeAny.push(v); }); else includeAll.push(raw); } return { includeAll, includeAny, exclude }; }