export type Sort = { key: string; dir: "asc" | "desc" }; export type FilterState = { includeAll: string[]; includeAny: string[]; exclude: string[] };
export interface LeadDataSource { list(params: { offset: number; limit: number; sort?: Sort; filters?: FilterState; select?: string[]; }): Promise<{ rows: any[]; total: number }>; }
export function makeHttpDataSource(endpoint = "/api/leads/query"): LeadDataSource { return { async list({ offset, limit, sort, filters, select }) { const res = await fetch(endpoint, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ offset, limit, sort, filters, select }) }); if (!res.ok) throw new Error(`Server error ${res.status}`); const data = await res.json(); return { rows: data.rows, total: data.total }; }, }; }